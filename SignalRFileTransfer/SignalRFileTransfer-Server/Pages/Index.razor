@page "/"
@using System.Diagnostics.CodeAnalysis
@using AsyncAwaitBestPractices
@using SignalRFileTransfer_Server.Services
@implements IDisposable

<h1>Known Files</h1>

<div id="received-files">
    @foreach (var file in FileTransferHandler.ReceivedFiles)
    {
        <p>Key: @file.FileKey: Size: @file.Buffer.Length</p>
    }
</div>


@code
{
    [Inject]
    [NotNull]
    private IFileTransferHandler? FileTransferHandler { get; set; }

    public void Dispose()
    {
        FileTransferHandler.FileReceived -= HandleFileReceived;
    }

    protected override void OnInitialized()
    {
        FileTransferHandler.FileReceived += HandleFileReceived;

        base.OnInitialized();
    }

    private void HandleFileReceived(ReceivedFile _)
    {
        InvokeAsync(StateHasChanged).SafeFireAndForget();
    }
}